/**
 * generated by Xtext 2.14.0
 */
package fr.unice.polytech.si5.polycreate.concretesyntax.formatting2;

import com.google.inject.Inject;
import fr.unice.polytech.si5.polycreate.abstractsyntax.polycreate.Operation;
import fr.unice.polytech.si5.polycreate.abstractsyntax.polycreate.Polycreate;
import fr.unice.polytech.si5.polycreate.abstractsyntax.polycreate.Variable;
import fr.unice.polytech.si5.polycreate.concretesyntax.services.PolycreateGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class PolycreateFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private PolycreateGrammarAccess _polycreateGrammarAccess;
  
  protected void _format(final Polycreate polycreate, @Extension final IFormattableDocument document) {
    EList<Operation> _operation = polycreate.getOperation();
    for (final Operation operation : _operation) {
      document.<Operation>format(operation);
    }
    EList<Variable> _variable = polycreate.getVariable();
    for (final Variable variable : _variable) {
      document.<Variable>format(variable);
    }
  }
  
  public void format(final Object polycreate, final IFormattableDocument document) {
    if (polycreate instanceof XtextResource) {
      _format((XtextResource)polycreate, document);
      return;
    } else if (polycreate instanceof Polycreate) {
      _format((Polycreate)polycreate, document);
      return;
    } else if (polycreate instanceof EObject) {
      _format((EObject)polycreate, document);
      return;
    } else if (polycreate == null) {
      _format((Void)null, document);
      return;
    } else if (polycreate != null) {
      _format(polycreate, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(polycreate, document).toString());
    }
  }
}
