/*
 * generated by Xtext 2.14.0
 */
package fr.unice.polytech.si5.polycreate.concretesyntax.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PolycreateGrammarAccess extends AbstractGrammarElementFinder {
	
	public class PolycreateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Polycreate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPolycreateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPolycreateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOperationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOperationAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cOperationOperationParserRuleCall_4_2_0 = (RuleCall)cOperationAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cOperationAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cOperationOperationParserRuleCall_4_3_1_0 = (RuleCall)cOperationAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cVariableKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cVariableAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cVariableVariableParserRuleCall_5_2_0 = (RuleCall)cVariableAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cVariableAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cVariableVariableParserRuleCall_5_3_1_0 = (RuleCall)cVariableAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Polycreate:
		//	{Polycreate}
		//	'Polycreate'
		//	name=EString
		//	'{' ('operation' '{' operation+=Operation ("," operation+=Operation)* '}')? ('variable' '{' variable+=Variable (","
		//	variable+=Variable)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Polycreate} 'Polycreate' name=EString '{' ('operation' '{' operation+=Operation ("," operation+=Operation)* '}')?
		//('variable' '{' variable+=Variable ("," variable+=Variable)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Polycreate}
		public Action getPolycreateAction_0() { return cPolycreateAction_0; }
		
		//'Polycreate'
		public Keyword getPolycreateKeyword_1() { return cPolycreateKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('operation' '{' operation+=Operation ("," operation+=Operation)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'operation'
		public Keyword getOperationKeyword_4_0() { return cOperationKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//operation+=Operation
		public Assignment getOperationAssignment_4_2() { return cOperationAssignment_4_2; }
		
		//Operation
		public RuleCall getOperationOperationParserRuleCall_4_2_0() { return cOperationOperationParserRuleCall_4_2_0; }
		
		//("," operation+=Operation)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//operation+=Operation
		public Assignment getOperationAssignment_4_3_1() { return cOperationAssignment_4_3_1; }
		
		//Operation
		public RuleCall getOperationOperationParserRuleCall_4_3_1_0() { return cOperationOperationParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('variable' '{' variable+=Variable ("," variable+=Variable)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'variable'
		public Keyword getVariableKeyword_5_0() { return cVariableKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_5_2() { return cVariableAssignment_5_2; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_5_2_0() { return cVariableVariableParserRuleCall_5_2_0; }
		
		//("," variable+=Variable)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_5_3_1() { return cVariableAssignment_5_3_1; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_5_3_1_0() { return cVariableVariableParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Operation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGoForwardParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGoBackwardParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOpenGripperParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCloseGripperParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTurnParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cStopParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cStructuralConditionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Operation:
		//	GoForward | GoBackward | OpenGripper | CloseGripper | Turn | Stop | StructuralCondition;
		@Override public ParserRule getRule() { return rule; }
		
		//GoForward | GoBackward | OpenGripper | CloseGripper | Turn | Stop | StructuralCondition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GoForward
		public RuleCall getGoForwardParserRuleCall_0() { return cGoForwardParserRuleCall_0; }
		
		//GoBackward
		public RuleCall getGoBackwardParserRuleCall_1() { return cGoBackwardParserRuleCall_1; }
		
		//OpenGripper
		public RuleCall getOpenGripperParserRuleCall_2() { return cOpenGripperParserRuleCall_2; }
		
		//CloseGripper
		public RuleCall getCloseGripperParserRuleCall_3() { return cCloseGripperParserRuleCall_3; }
		
		//Turn
		public RuleCall getTurnParserRuleCall_4() { return cTurnParserRuleCall_4; }
		
		//Stop
		public RuleCall getStopParserRuleCall_5() { return cStopParserRuleCall_5; }
		
		//StructuralCondition
		public RuleCall getStructuralConditionParserRuleCall_6() { return cStructuralConditionParserRuleCall_6; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Variable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVariable_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGripperSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRightSensorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLeftSensorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Variable:
		//	Variable_Impl | GripperSensor | RightSensor | LeftSensor | Object;
		@Override public ParserRule getRule() { return rule; }
		
		//Variable_Impl | GripperSensor | RightSensor | LeftSensor | Object
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Variable_Impl
		public RuleCall getVariable_ImplParserRuleCall_0() { return cVariable_ImplParserRuleCall_0; }
		
		//GripperSensor
		public RuleCall getGripperSensorParserRuleCall_1() { return cGripperSensorParserRuleCall_1; }
		
		//RightSensor
		public RuleCall getRightSensorParserRuleCall_2() { return cRightSensorParserRuleCall_2; }
		
		//LeftSensor
		public RuleCall getLeftSensorParserRuleCall_3() { return cLeftSensorParserRuleCall_3; }
		
		//Object
		public RuleCall getObjectParserRuleCall_4() { return cObjectParserRuleCall_4; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Condition");
		private final RuleCall cComparisonParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Condition:
		//	Comparison;
		@Override public ParserRule getRule() { return rule; }
		
		//Comparison
		public RuleCall getComparisonParserRuleCall() { return cComparisonParserRuleCall; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class Variable_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Variable_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVariableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeVarTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInitialValueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInitialValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInitialValueEDoubleParserRuleCall_5_1_0 = (RuleCall)cInitialValueAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Variable_Impl Variable:
		//	{Variable}
		//	'Variable'
		//	name=EString
		//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Variable} 'Variable' name=EString '{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Variable}
		public Action getVariableAction_0() { return cVariableAction_0; }
		
		//'Variable'
		public Keyword getVariableKeyword_1() { return cVariableKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' type=VarType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=VarType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//VarType
		public RuleCall getTypeVarTypeEnumRuleCall_4_1_0() { return cTypeVarTypeEnumRuleCall_4_1_0; }
		
		//('initialValue' initialValue=EDouble)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'initialValue'
		public Keyword getInitialValueKeyword_5_0() { return cInitialValueKeyword_5_0; }
		
		//initialValue=EDouble
		public Assignment getInitialValueAssignment_5_1() { return cInitialValueAssignment_5_1; }
		
		//EDouble
		public RuleCall getInitialValueEDoubleParserRuleCall_5_1_0() { return cInitialValueEDoubleParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class GoForwardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.GoForward");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGoForwardAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGoForwardKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GoForward:
		//	{GoForward}
		//	'GoForward';
		@Override public ParserRule getRule() { return rule; }
		
		//{GoForward} 'GoForward'
		public Group getGroup() { return cGroup; }
		
		//{GoForward}
		public Action getGoForwardAction_0() { return cGoForwardAction_0; }
		
		//'GoForward'
		public Keyword getGoForwardKeyword_1() { return cGoForwardKeyword_1; }
	}
	public class GoBackwardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.GoBackward");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGoBackwardAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGoBackwardKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GoBackward:
		//	{GoBackward}
		//	'GoBackward';
		@Override public ParserRule getRule() { return rule; }
		
		//{GoBackward} 'GoBackward'
		public Group getGroup() { return cGroup; }
		
		//{GoBackward}
		public Action getGoBackwardAction_0() { return cGoBackwardAction_0; }
		
		//'GoBackward'
		public Keyword getGoBackwardKeyword_1() { return cGoBackwardKeyword_1; }
	}
	public class OpenGripperElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.OpenGripper");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOpenGripperAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOpenGripperKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//OpenGripper:
		//	{OpenGripper}
		//	'OpenGripper';
		@Override public ParserRule getRule() { return rule; }
		
		//{OpenGripper} 'OpenGripper'
		public Group getGroup() { return cGroup; }
		
		//{OpenGripper}
		public Action getOpenGripperAction_0() { return cOpenGripperAction_0; }
		
		//'OpenGripper'
		public Keyword getOpenGripperKeyword_1() { return cOpenGripperKeyword_1; }
	}
	public class CloseGripperElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.CloseGripper");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCloseGripperAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCloseGripperKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CloseGripper:
		//	{CloseGripper}
		//	'CloseGripper';
		@Override public ParserRule getRule() { return rule; }
		
		//{CloseGripper} 'CloseGripper'
		public Group getGroup() { return cGroup; }
		
		//{CloseGripper}
		public Action getCloseGripperAction_0() { return cCloseGripperAction_0; }
		
		//'CloseGripper'
		public Keyword getCloseGripperKeyword_1() { return cCloseGripperKeyword_1; }
	}
	public class TurnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Turn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTurnAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTurnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Turn:
		//	{Turn}
		//	'Turn';
		@Override public ParserRule getRule() { return rule; }
		
		//{Turn} 'Turn'
		public Group getGroup() { return cGroup; }
		
		//{Turn}
		public Action getTurnAction_0() { return cTurnAction_0; }
		
		//'Turn'
		public Keyword getTurnKeyword_1() { return cTurnKeyword_1; }
	}
	public class StopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Stop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStopAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Stop:
		//	{Stop}
		//	'Stop';
		@Override public ParserRule getRule() { return rule; }
		
		//{Stop} 'Stop'
		public Group getGroup() { return cGroup; }
		
		//{Stop}
		public Action getStopAction_0() { return cStopAction_0; }
		
		//'Stop'
		public Keyword getStopKeyword_1() { return cStopKeyword_1; }
	}
	public class StructuralConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.StructuralCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStructuralConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cThenKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cThenAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cThenOperationCrossReference_2_2_0 = (CrossReference)cThenAssignment_2_2.eContents().get(0);
		private final RuleCall cThenOperationEStringParserRuleCall_2_2_0_1 = (RuleCall)cThenOperationCrossReference_2_2_0.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cThenAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final CrossReference cThenOperationCrossReference_2_3_1_0 = (CrossReference)cThenAssignment_2_3_1.eContents().get(0);
		private final RuleCall cThenOperationEStringParserRuleCall_2_3_1_0_1 = (RuleCall)cThenOperationCrossReference_2_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cElseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cElseAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cElseOperationCrossReference_3_2_0 = (CrossReference)cElseAssignment_3_2.eContents().get(0);
		private final RuleCall cElseOperationEStringParserRuleCall_3_2_0_1 = (RuleCall)cElseOperationCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cElseAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cElseOperationCrossReference_3_3_1_0 = (CrossReference)cElseAssignment_3_3_1.eContents().get(0);
		private final RuleCall cElseOperationEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cElseOperationCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cIfKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIfAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cIfConditionCrossReference_6_0 = (CrossReference)cIfAssignment_6.eContents().get(0);
		private final RuleCall cIfConditionEStringParserRuleCall_6_0_1 = (RuleCall)cIfConditionCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cIfAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cIfConditionCrossReference_7_1_0 = (CrossReference)cIfAssignment_7_1.eContents().get(0);
		private final RuleCall cIfConditionEStringParserRuleCall_7_1_0_1 = (RuleCall)cIfConditionCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//StructuralCondition:
		//	'StructuralCondition'
		//	'{' ('then' '(' then+=[Operation|EString] ("," then+=[Operation|EString])* ')')? ('else' '('
		//	else+=[Operation|EString] ("," else+=[Operation|EString])* ')')?
		//	'if' '(' if+=[Condition|EString] ("," if+=[Condition|EString])* ')'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'StructuralCondition' '{' ('then' '(' then+=[Operation|EString] ("," then+=[Operation|EString])* ')')? ('else' '('
		//else+=[Operation|EString] ("," else+=[Operation|EString])* ')')? 'if' '(' if+=[Condition|EString] (","
		//if+=[Condition|EString])* ')' '}'
		public Group getGroup() { return cGroup; }
		
		//'StructuralCondition'
		public Keyword getStructuralConditionKeyword_0() { return cStructuralConditionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('then' '(' then+=[Operation|EString] ("," then+=[Operation|EString])* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'then'
		public Keyword getThenKeyword_2_0() { return cThenKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//then+=[Operation|EString]
		public Assignment getThenAssignment_2_2() { return cThenAssignment_2_2; }
		
		//[Operation|EString]
		public CrossReference getThenOperationCrossReference_2_2_0() { return cThenOperationCrossReference_2_2_0; }
		
		//EString
		public RuleCall getThenOperationEStringParserRuleCall_2_2_0_1() { return cThenOperationEStringParserRuleCall_2_2_0_1; }
		
		//("," then+=[Operation|EString])*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//then+=[Operation|EString]
		public Assignment getThenAssignment_2_3_1() { return cThenAssignment_2_3_1; }
		
		//[Operation|EString]
		public CrossReference getThenOperationCrossReference_2_3_1_0() { return cThenOperationCrossReference_2_3_1_0; }
		
		//EString
		public RuleCall getThenOperationEStringParserRuleCall_2_3_1_0_1() { return cThenOperationEStringParserRuleCall_2_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
		
		//('else' '(' else+=[Operation|EString] ("," else+=[Operation|EString])* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'else'
		public Keyword getElseKeyword_3_0() { return cElseKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//else+=[Operation|EString]
		public Assignment getElseAssignment_3_2() { return cElseAssignment_3_2; }
		
		//[Operation|EString]
		public CrossReference getElseOperationCrossReference_3_2_0() { return cElseOperationCrossReference_3_2_0; }
		
		//EString
		public RuleCall getElseOperationEStringParserRuleCall_3_2_0_1() { return cElseOperationEStringParserRuleCall_3_2_0_1; }
		
		//("," else+=[Operation|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//else+=[Operation|EString]
		public Assignment getElseAssignment_3_3_1() { return cElseAssignment_3_3_1; }
		
		//[Operation|EString]
		public CrossReference getElseOperationCrossReference_3_3_1_0() { return cElseOperationCrossReference_3_3_1_0; }
		
		//EString
		public RuleCall getElseOperationEStringParserRuleCall_3_3_1_0_1() { return cElseOperationEStringParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//'if'
		public Keyword getIfKeyword_4() { return cIfKeyword_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//if+=[Condition|EString]
		public Assignment getIfAssignment_6() { return cIfAssignment_6; }
		
		//[Condition|EString]
		public CrossReference getIfConditionCrossReference_6_0() { return cIfConditionCrossReference_6_0; }
		
		//EString
		public RuleCall getIfConditionEStringParserRuleCall_6_0_1() { return cIfConditionEStringParserRuleCall_6_0_1; }
		
		//("," if+=[Condition|EString])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//if+=[Condition|EString]
		public Assignment getIfAssignment_7_1() { return cIfAssignment_7_1; }
		
		//[Condition|EString]
		public CrossReference getIfConditionCrossReference_7_1_0() { return cIfConditionCrossReference_7_1_0; }
		
		//EString
		public RuleCall getIfConditionEStringParserRuleCall_7_1_0_1() { return cIfConditionEStringParserRuleCall_7_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ComparisonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Comparison");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComparisonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValueVarTypeEnumRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		private final Keyword cLeftVariableKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLeftVariableAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cLeftVariableVariableCrossReference_4_0 = (CrossReference)cLeftVariableAssignment_4.eContents().get(0);
		private final RuleCall cLeftVariableVariableEStringParserRuleCall_4_0_1 = (RuleCall)cLeftVariableVariableCrossReference_4_0.eContents().get(1);
		private final Keyword cRightVariableKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRightVariableAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cRightVariableVariableCrossReference_6_0 = (CrossReference)cRightVariableAssignment_6.eContents().get(0);
		private final RuleCall cRightVariableVariableEStringParserRuleCall_6_0_1 = (RuleCall)cRightVariableVariableCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Comparison:
		//	'Comparison'
		//	'{' ('value' value=VarType)?
		//	'leftVariable' leftVariable=[Variable|EString]
		//	'rightVariable' rightVariable=[Variable|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Comparison' '{' ('value' value=VarType)? 'leftVariable' leftVariable=[Variable|EString] 'rightVariable'
		//rightVariable=[Variable|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'Comparison'
		public Keyword getComparisonKeyword_0() { return cComparisonKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('value' value=VarType)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'value'
		public Keyword getValueKeyword_2_0() { return cValueKeyword_2_0; }
		
		//value=VarType
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }
		
		//VarType
		public RuleCall getValueVarTypeEnumRuleCall_2_1_0() { return cValueVarTypeEnumRuleCall_2_1_0; }
		
		//'leftVariable'
		public Keyword getLeftVariableKeyword_3() { return cLeftVariableKeyword_3; }
		
		//leftVariable=[Variable|EString]
		public Assignment getLeftVariableAssignment_4() { return cLeftVariableAssignment_4; }
		
		//[Variable|EString]
		public CrossReference getLeftVariableVariableCrossReference_4_0() { return cLeftVariableVariableCrossReference_4_0; }
		
		//EString
		public RuleCall getLeftVariableVariableEStringParserRuleCall_4_0_1() { return cLeftVariableVariableEStringParserRuleCall_4_0_1; }
		
		//'rightVariable'
		public Keyword getRightVariableKeyword_5() { return cRightVariableKeyword_5; }
		
		//rightVariable=[Variable|EString]
		public Assignment getRightVariableAssignment_6() { return cRightVariableAssignment_6; }
		
		//[Variable|EString]
		public CrossReference getRightVariableVariableCrossReference_6_0() { return cRightVariableVariableCrossReference_6_0; }
		
		//EString
		public RuleCall getRightVariableVariableEStringParserRuleCall_6_0_1() { return cRightVariableVariableEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class GripperSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.GripperSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGripperSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGripperSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeVarTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInitialValueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInitialValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInitialValueEDoubleParserRuleCall_5_1_0 = (RuleCall)cInitialValueAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GripperSensor:
		//	{GripperSensor}
		//	'GripperSensor'
		//	name=EString
		//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GripperSensor} 'GripperSensor' name=EString '{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GripperSensor}
		public Action getGripperSensorAction_0() { return cGripperSensorAction_0; }
		
		//'GripperSensor'
		public Keyword getGripperSensorKeyword_1() { return cGripperSensorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' type=VarType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=VarType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//VarType
		public RuleCall getTypeVarTypeEnumRuleCall_4_1_0() { return cTypeVarTypeEnumRuleCall_4_1_0; }
		
		//('initialValue' initialValue=EDouble)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'initialValue'
		public Keyword getInitialValueKeyword_5_0() { return cInitialValueKeyword_5_0; }
		
		//initialValue=EDouble
		public Assignment getInitialValueAssignment_5_1() { return cInitialValueAssignment_5_1; }
		
		//EDouble
		public RuleCall getInitialValueEDoubleParserRuleCall_5_1_0() { return cInitialValueEDoubleParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RightSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.RightSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRightSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRightSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeVarTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInitialValueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInitialValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInitialValueEDoubleParserRuleCall_5_1_0 = (RuleCall)cInitialValueAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RightSensor:
		//	{RightSensor}
		//	'RightSensor'
		//	name=EString
		//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RightSensor} 'RightSensor' name=EString '{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)? '}'
		public Group getGroup() { return cGroup; }
		
		//{RightSensor}
		public Action getRightSensorAction_0() { return cRightSensorAction_0; }
		
		//'RightSensor'
		public Keyword getRightSensorKeyword_1() { return cRightSensorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' type=VarType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=VarType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//VarType
		public RuleCall getTypeVarTypeEnumRuleCall_4_1_0() { return cTypeVarTypeEnumRuleCall_4_1_0; }
		
		//('initialValue' initialValue=EDouble)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'initialValue'
		public Keyword getInitialValueKeyword_5_0() { return cInitialValueKeyword_5_0; }
		
		//initialValue=EDouble
		public Assignment getInitialValueAssignment_5_1() { return cInitialValueAssignment_5_1; }
		
		//EDouble
		public RuleCall getInitialValueEDoubleParserRuleCall_5_1_0() { return cInitialValueEDoubleParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class LeftSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.LeftSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLeftSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeVarTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInitialValueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInitialValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInitialValueEDoubleParserRuleCall_5_1_0 = (RuleCall)cInitialValueAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LeftSensor:
		//	{LeftSensor}
		//	'LeftSensor'
		//	name=EString
		//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{LeftSensor} 'LeftSensor' name=EString '{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)? '}'
		public Group getGroup() { return cGroup; }
		
		//{LeftSensor}
		public Action getLeftSensorAction_0() { return cLeftSensorAction_0; }
		
		//'LeftSensor'
		public Keyword getLeftSensorKeyword_1() { return cLeftSensorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' type=VarType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=VarType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//VarType
		public RuleCall getTypeVarTypeEnumRuleCall_4_1_0() { return cTypeVarTypeEnumRuleCall_4_1_0; }
		
		//('initialValue' initialValue=EDouble)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'initialValue'
		public Keyword getInitialValueKeyword_5_0() { return cInitialValueKeyword_5_0; }
		
		//initialValue=EDouble
		public Assignment getInitialValueAssignment_5_1() { return cInitialValueAssignment_5_1; }
		
		//EDouble
		public RuleCall getInitialValueEDoubleParserRuleCall_5_1_0() { return cInitialValueEDoubleParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.Object");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cObjectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeVarTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInitialValueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInitialValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInitialValueEDoubleParserRuleCall_5_1_0 = (RuleCall)cInitialValueAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPositionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPositionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPositionVarTypeEnumRuleCall_6_1_0 = (RuleCall)cPositionAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Object:
		//	{Object}
		//	'Object'
		//	name=EString
		//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)? ('position' position=VarType)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Object} 'Object' name=EString '{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)? ('position'
		//position=VarType)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Object}
		public Action getObjectAction_0() { return cObjectAction_0; }
		
		//'Object'
		public Keyword getObjectKeyword_1() { return cObjectKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' type=VarType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=VarType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//VarType
		public RuleCall getTypeVarTypeEnumRuleCall_4_1_0() { return cTypeVarTypeEnumRuleCall_4_1_0; }
		
		//('initialValue' initialValue=EDouble)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'initialValue'
		public Keyword getInitialValueKeyword_5_0() { return cInitialValueKeyword_5_0; }
		
		//initialValue=EDouble
		public Assignment getInitialValueAssignment_5_1() { return cInitialValueAssignment_5_1; }
		
		//EDouble
		public RuleCall getInitialValueEDoubleParserRuleCall_5_1_0() { return cInitialValueEDoubleParserRuleCall_5_1_0; }
		
		//('position' position=VarType)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'position'
		public Keyword getPositionKeyword_6_0() { return cPositionKeyword_6_0; }
		
		//position=VarType
		public Assignment getPositionAssignment_6_1() { return cPositionAssignment_6_1; }
		
		//VarType
		public RuleCall getPositionVarTypeEnumRuleCall_6_1_0() { return cPositionVarTypeEnumRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	public class VarTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate.VarType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIntIntKeyword_0_0 = (Keyword)cIntEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDoubleDoubleKeyword_1_0 = (Keyword)cDoubleEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPositionSensorEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPositionSensorPositionSensorKeyword_2_0 = (Keyword)cPositionSensorEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTouchSensorEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTouchSensorTouchSensorKeyword_3_0 = (Keyword)cTouchSensorEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDistanceSensorEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDistanceSensorDistanceSensorKeyword_4_0 = (Keyword)cDistanceSensorEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cCameraEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cCameraCameraKeyword_5_0 = (Keyword)cCameraEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cReceiverEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cReceiverReceiverKeyword_6_0 = (Keyword)cReceiverEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cGPSEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cGPSGPSKeyword_7_0 = (Keyword)cGPSEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cMotorEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cMotorMotorKeyword_8_0 = (Keyword)cMotorEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum VarType:
		//	int | double | PositionSensor | TouchSensor | DistanceSensor | Camera | Receiver | GPS | Motor;
		public EnumRule getRule() { return rule; }
		
		//int | double | PositionSensor | TouchSensor | DistanceSensor | Camera | Receiver | GPS | Motor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//int
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_0() { return cIntEnumLiteralDeclaration_0; }
		
		//'int'
		public Keyword getIntIntKeyword_0_0() { return cIntIntKeyword_0_0; }
		
		//double
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_1() { return cDoubleEnumLiteralDeclaration_1; }
		
		//'double'
		public Keyword getDoubleDoubleKeyword_1_0() { return cDoubleDoubleKeyword_1_0; }
		
		//PositionSensor
		public EnumLiteralDeclaration getPositionSensorEnumLiteralDeclaration_2() { return cPositionSensorEnumLiteralDeclaration_2; }
		
		//'PositionSensor'
		public Keyword getPositionSensorPositionSensorKeyword_2_0() { return cPositionSensorPositionSensorKeyword_2_0; }
		
		//TouchSensor
		public EnumLiteralDeclaration getTouchSensorEnumLiteralDeclaration_3() { return cTouchSensorEnumLiteralDeclaration_3; }
		
		//'TouchSensor'
		public Keyword getTouchSensorTouchSensorKeyword_3_0() { return cTouchSensorTouchSensorKeyword_3_0; }
		
		//DistanceSensor
		public EnumLiteralDeclaration getDistanceSensorEnumLiteralDeclaration_4() { return cDistanceSensorEnumLiteralDeclaration_4; }
		
		//'DistanceSensor'
		public Keyword getDistanceSensorDistanceSensorKeyword_4_0() { return cDistanceSensorDistanceSensorKeyword_4_0; }
		
		//Camera
		public EnumLiteralDeclaration getCameraEnumLiteralDeclaration_5() { return cCameraEnumLiteralDeclaration_5; }
		
		//'Camera'
		public Keyword getCameraCameraKeyword_5_0() { return cCameraCameraKeyword_5_0; }
		
		//Receiver
		public EnumLiteralDeclaration getReceiverEnumLiteralDeclaration_6() { return cReceiverEnumLiteralDeclaration_6; }
		
		//'Receiver'
		public Keyword getReceiverReceiverKeyword_6_0() { return cReceiverReceiverKeyword_6_0; }
		
		//GPS
		public EnumLiteralDeclaration getGPSEnumLiteralDeclaration_7() { return cGPSEnumLiteralDeclaration_7; }
		
		//'GPS'
		public Keyword getGPSGPSKeyword_7_0() { return cGPSGPSKeyword_7_0; }
		
		//Motor
		public EnumLiteralDeclaration getMotorEnumLiteralDeclaration_8() { return cMotorEnumLiteralDeclaration_8; }
		
		//'Motor'
		public Keyword getMotorMotorKeyword_8_0() { return cMotorMotorKeyword_8_0; }
	}
	
	private final PolycreateElements pPolycreate;
	private final OperationElements pOperation;
	private final VariableElements pVariable;
	private final ConditionElements pCondition;
	private final EStringElements pEString;
	private final Variable_ImplElements pVariable_Impl;
	private final GoForwardElements pGoForward;
	private final GoBackwardElements pGoBackward;
	private final OpenGripperElements pOpenGripper;
	private final CloseGripperElements pCloseGripper;
	private final TurnElements pTurn;
	private final StopElements pStop;
	private final StructuralConditionElements pStructuralCondition;
	private final ComparisonElements pComparison;
	private final VarTypeElements eVarType;
	private final EDoubleElements pEDouble;
	private final GripperSensorElements pGripperSensor;
	private final RightSensorElements pRightSensor;
	private final LeftSensorElements pLeftSensor;
	private final ObjectElements pObject;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PolycreateGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPolycreate = new PolycreateElements();
		this.pOperation = new OperationElements();
		this.pVariable = new VariableElements();
		this.pCondition = new ConditionElements();
		this.pEString = new EStringElements();
		this.pVariable_Impl = new Variable_ImplElements();
		this.pGoForward = new GoForwardElements();
		this.pGoBackward = new GoBackwardElements();
		this.pOpenGripper = new OpenGripperElements();
		this.pCloseGripper = new CloseGripperElements();
		this.pTurn = new TurnElements();
		this.pStop = new StopElements();
		this.pStructuralCondition = new StructuralConditionElements();
		this.pComparison = new ComparisonElements();
		this.eVarType = new VarTypeElements();
		this.pEDouble = new EDoubleElements();
		this.pGripperSensor = new GripperSensorElements();
		this.pRightSensor = new RightSensorElements();
		this.pLeftSensor = new LeftSensorElements();
		this.pObject = new ObjectElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.unice.polytech.si5.polycreate.concretesyntax.Polycreate".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Polycreate:
	//	{Polycreate}
	//	'Polycreate'
	//	name=EString
	//	'{' ('operation' '{' operation+=Operation ("," operation+=Operation)* '}')? ('variable' '{' variable+=Variable (","
	//	variable+=Variable)* '}')?
	//	'}';
	public PolycreateElements getPolycreateAccess() {
		return pPolycreate;
	}
	
	public ParserRule getPolycreateRule() {
		return getPolycreateAccess().getRule();
	}
	
	//Operation:
	//	GoForward | GoBackward | OpenGripper | CloseGripper | Turn | Stop | StructuralCondition;
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//Variable:
	//	Variable_Impl | GripperSensor | RightSensor | LeftSensor | Object;
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//Condition:
	//	Comparison;
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Variable_Impl Variable:
	//	{Variable}
	//	'Variable'
	//	name=EString
	//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
	//	'}';
	public Variable_ImplElements getVariable_ImplAccess() {
		return pVariable_Impl;
	}
	
	public ParserRule getVariable_ImplRule() {
		return getVariable_ImplAccess().getRule();
	}
	
	//GoForward:
	//	{GoForward}
	//	'GoForward';
	public GoForwardElements getGoForwardAccess() {
		return pGoForward;
	}
	
	public ParserRule getGoForwardRule() {
		return getGoForwardAccess().getRule();
	}
	
	//GoBackward:
	//	{GoBackward}
	//	'GoBackward';
	public GoBackwardElements getGoBackwardAccess() {
		return pGoBackward;
	}
	
	public ParserRule getGoBackwardRule() {
		return getGoBackwardAccess().getRule();
	}
	
	//OpenGripper:
	//	{OpenGripper}
	//	'OpenGripper';
	public OpenGripperElements getOpenGripperAccess() {
		return pOpenGripper;
	}
	
	public ParserRule getOpenGripperRule() {
		return getOpenGripperAccess().getRule();
	}
	
	//CloseGripper:
	//	{CloseGripper}
	//	'CloseGripper';
	public CloseGripperElements getCloseGripperAccess() {
		return pCloseGripper;
	}
	
	public ParserRule getCloseGripperRule() {
		return getCloseGripperAccess().getRule();
	}
	
	//Turn:
	//	{Turn}
	//	'Turn';
	public TurnElements getTurnAccess() {
		return pTurn;
	}
	
	public ParserRule getTurnRule() {
		return getTurnAccess().getRule();
	}
	
	//Stop:
	//	{Stop}
	//	'Stop';
	public StopElements getStopAccess() {
		return pStop;
	}
	
	public ParserRule getStopRule() {
		return getStopAccess().getRule();
	}
	
	//StructuralCondition:
	//	'StructuralCondition'
	//	'{' ('then' '(' then+=[Operation|EString] ("," then+=[Operation|EString])* ')')? ('else' '('
	//	else+=[Operation|EString] ("," else+=[Operation|EString])* ')')?
	//	'if' '(' if+=[Condition|EString] ("," if+=[Condition|EString])* ')'
	//	'}';
	public StructuralConditionElements getStructuralConditionAccess() {
		return pStructuralCondition;
	}
	
	public ParserRule getStructuralConditionRule() {
		return getStructuralConditionAccess().getRule();
	}
	
	//Comparison:
	//	'Comparison'
	//	'{' ('value' value=VarType)?
	//	'leftVariable' leftVariable=[Variable|EString]
	//	'rightVariable' rightVariable=[Variable|EString]
	//	'}';
	public ComparisonElements getComparisonAccess() {
		return pComparison;
	}
	
	public ParserRule getComparisonRule() {
		return getComparisonAccess().getRule();
	}
	
	//enum VarType:
	//	int | double | PositionSensor | TouchSensor | DistanceSensor | Camera | Receiver | GPS | Motor;
	public VarTypeElements getVarTypeAccess() {
		return eVarType;
	}
	
	public EnumRule getVarTypeRule() {
		return getVarTypeAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//GripperSensor:
	//	{GripperSensor}
	//	'GripperSensor'
	//	name=EString
	//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
	//	'}';
	public GripperSensorElements getGripperSensorAccess() {
		return pGripperSensor;
	}
	
	public ParserRule getGripperSensorRule() {
		return getGripperSensorAccess().getRule();
	}
	
	//RightSensor:
	//	{RightSensor}
	//	'RightSensor'
	//	name=EString
	//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
	//	'}';
	public RightSensorElements getRightSensorAccess() {
		return pRightSensor;
	}
	
	public ParserRule getRightSensorRule() {
		return getRightSensorAccess().getRule();
	}
	
	//LeftSensor:
	//	{LeftSensor}
	//	'LeftSensor'
	//	name=EString
	//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)?
	//	'}';
	public LeftSensorElements getLeftSensorAccess() {
		return pLeftSensor;
	}
	
	public ParserRule getLeftSensorRule() {
		return getLeftSensorAccess().getRule();
	}
	
	//Object:
	//	{Object}
	//	'Object'
	//	name=EString
	//	'{' ('type' type=VarType)? ('initialValue' initialValue=EDouble)? ('position' position=VarType)?
	//	'}';
	public ObjectElements getObjectAccess() {
		return pObject;
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
